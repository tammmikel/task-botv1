from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from database.queries import UserQueries
from config import ROLES

router = Router()

@router.message(Command('start'))
async def start_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = message.from_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
    existing_user = await UserQueries.get_user(user.id)
    
    if existing_user:
        role_name = ROLES.get(existing_user['role'], existing_user['role'])
        await message.reply(
            f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n"
            f"–í–∞—à–∞ —Ä–æ–ª—å: {role_name}\n\n"
            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            f"/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            f"/tasks - –ú–æ–∏ –∑–∞–¥–∞—á–∏"
        )
        return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    users_count = await UserQueries.get_users_count()
    role = 'DIRECTOR' if users_count == 0 else 'SYS_ADMIN'
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await UserQueries.create_user(
        user_id=user.id,
        username=user.username,
        first_name=user.first_name,
        last_name=user.last_name,
        role=role
    )
    
    role_name = ROLES.get(role, role)
    
    welcome_msg = f"üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!\n"
    welcome_msg += f"–í–∞—à–∞ —Ä–æ–ª—å: {role_name}\n\n"
    
    if role == 'DIRECTOR':
        welcome_msg += "üéØ –í—ã –ø–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–ª—É—á–∏–ª–∏ —Ä–æ–ª—å –î–∏—Ä–µ–∫—Ç–æ—Ä–∞\n"
        welcome_msg += "–í—ã –º–æ–∂–µ—Ç–µ:\n"
        welcome_msg += "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –∑–∞–¥–∞—á–∏\n"
        welcome_msg += "‚Ä¢ –ù–∞–∑–Ω–∞—á–∞—Ç—å —Ä–æ–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º\n"
        welcome_msg += "‚Ä¢ –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É\n\n"
    else:
        welcome_msg += "üë§ –í—ã –ø–æ–ª—É—á–∏–ª–∏ —Ä–æ–ª—å –°–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞\n"
        welcome_msg += "–î–∏—Ä–µ–∫—Ç–æ—Ä –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à—É —Ä–æ–ª—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏\n\n"
    
    welcome_msg += "–ö–æ–º–∞–Ω–¥—ã:\n"
    welcome_msg += "/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
    welcome_msg += "/tasks - –ú–æ–∏ –∑–∞–¥–∞—á–∏"
    
    await message.reply(welcome_msg)

@router.message(Command('menu'))
async def menu_handler(message: Message):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user = await UserQueries.get_user(message.from_user.id)
    
    if not user:
        await message.reply("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
        return
    
    role = user['role']
    menu_text = "üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
    
    if role in ['DIRECTOR', 'MANAGER']:
        menu_text += "üè¢ /companies - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏—è–º–∏\n"
        menu_text += "‚ûï /new_task - –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É\n"
    
    if role == 'DIRECTOR':
        menu_text += "üë• /users - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
        menu_text += "üìä /analytics - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞\n"
    
    menu_text += "üìù /tasks - –ú–æ–∏ –∑–∞–¥–∞—á–∏\n"
    menu_text += "‚ÑπÔ∏è /info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"
    
    await message.reply(menu_text)

@router.message(Command('info'))
async def info_handler(message: Message):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"""
    user = await UserQueries.get_user(message.from_user.id)
    
    if not user:
        await message.reply("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
        return
    
    role_name = ROLES.get(user['role'], user['role'])
    
    info_text = f"‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n\n"
    info_text += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user['first_name']}\n"
    info_text += f"üé≠ –†–æ–ª—å: {role_name}\n\n"
    info_text += f"üìã –ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏\n"
    info_text += f"üè¢ –ö–æ–º–ø–∞–Ω–∏—è –∞—É—Ç—Å–æ—Ä—Å–∏–Ω–≥–∞\n\n"
    info_text += f"üí° –î–ª—è –ø–æ–º–æ—â–∏ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É"
    
    await message.reply(info_text)